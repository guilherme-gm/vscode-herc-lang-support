{"warpparty":{"params":[{"to_mapname":"string","x":"int","y":"int","party_id":"int","from_mapname":"string","include_leader":"int"}],"paramDoc":{"to_mapname":"Missing Documentation","x":"Missing Documentation","y":"Missing Documentation","party_id":"Missing Documentation","from_mapname":"Missing Documentation","include_leader":"Missing Documentation"},"doc":["Warps a party to specified map and coordinate given the party ID, which","you can get with getcharid(CHAR_ID_PARTY). You can also request another party id given","a member's name with getcharid(CHAR_ID_PARTY, <player_name>).","You can use the following \"map names\" for special warping behavior:","Random:       All party members are randomly warped in their current map","(as if they all used a fly wing).","SavePointAll: All party members are warped to their respective save point.","SavePoint:    All party members are warped to the save point of the","currently attached player (will fail if there's no player","attached).","Leader:       All party members are warped to the leader's position. The","leader must be online and in the current map-server for","this to work.","If you specify a from_mapname, warpparty() will only affect those on","that map.","You can exclude Party leader from warping, by keeping include_leader option as false.","Example:","mes(\"[Party Warper]\");","mes(\"Here you go!\");","close2();",".@id = getcharid(CHAR_ID_PARTY);","warpparty(\"prontera\", 150, 100, .@id, true);","close();"]}}