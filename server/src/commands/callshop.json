{"callshop":{"params":[{"name":"string","option":"int"}],"paramDoc":{"name":"Missing Documentation","option":"Missing Documentation"},"doc":["These are a series of commands used to create dynamic shops.","The callshop() function calls an invisible shop (FAKE_NPC) as if the player","clicked on it.","For the options on callShop:","0 = The normal window (buy, sell and cancel)","1 = The buy window","2 = The sell window","Example:","//Will call the shop named DaShop and opens the buy menu.","callshop(\"DaShop\", 1);","The shop which is called by callshop() (as long as an npcshop* command is","executed from that NPC (see note 1)) will trigger the labels OnBuyItem and","OnSellitem. These labels can take over handling for relatively the buying","of items from the shop and selling the items to a shop. Via these labels","you can customize the way an item is bought or sold by a player.","In the OnBuyItem, two arrays are filled (@bought_nameid and","@bought_quantity) with information about the name id (item id) sold","and the amount sold of it. Same goes for the OnSellItem label, only the","variables are named different (@sold_nameid, @sold_quantity, @sold_refine,","@sold_attribute, @sold_identify, @sold_card1, @sold_card2, @sold_card3,","@sold_card4). An example on a shop comes with Hercules, and can be found","in the doc/sample/npc_dynamic_shop.txt file.","This example shows how to use the labels and their set variables to create","a dynamic shop.","Note 1: These labels will only be triggered if a npcshop* command is","executed, this is because these commands set a special data on the shop","NPC, named master_nd in the source.","The OnSellItem and OnBuyItem are triggered in the NPC whose master_nd is","given in the shop."]}}