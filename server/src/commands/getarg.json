{"getarg":{"params":[{"index{":"int","default_value":"int"}],"paramDoc":{"index{":"Missing Documentation","default_value":"Missing Documentation"},"doc":["This function is used when you use the 'callsub' or 'callfunc' commands.","In the call you can specify variables that will make that call different","from another one. This function will return an argument the function or","subroutine was called with, and is the normal way to get them.","This is another thing that can let you use the same code more than once.","Argument numbering starts with 0, i.e. the first argument you gave is","number 0. If no such argument was given, a zero is returned.","place,50,50,6%TAB%script%TAB%Woman1%TAB%115,{","mes(\"[Woman]\");","mes(\"Lets see if you win\");","callfunc(\"funcNPC\", 2);","mes(\"Well done you have won\");","// ...","}","place,52,50,6%TAB%script%TAB%Woman2%TAB%115,{","mes(\"[Woman]\");","mes(\"Lets see if you win\");","callfunc(\"funcNPC\", 5);","mes(\"Well done you have won\");","// ...","}","function%TAB%script%TAB%funcNPC%TAB%{",".@win = rand(getarg(0));","if (.@win == 0)","return;","mes(\"Sorry you lost\");","close();","}","\"woman1\" NPC object calls the funcNPC. The argument it gives in this call","is stated as 2, so when the random number is generated by the 'rand'","function, it can only be 0 or 1. Whereas \"woman2\" gives 5 as the argument","number 0 when calling the function, so the random number could be 0, 1, 2,","3 or 4, this makes \"woman2\" less likely to say the player won.","You can pass multiple arguments in a function call:","callfunc(\"funcNPC\", 5, 4, 3);","getarg(0) would be 5, getarg(1) would be 4 and getarg(2) would be 3.","Getarg also has an optional argument:","If the target argument exists, it is returned.","Otherwise, if <default_value> is present it is returned instead, if not","the script terminates immediately.","In previous example getarg(2, -1) would be 3 and getarg(3, -1) would be -1."]}}