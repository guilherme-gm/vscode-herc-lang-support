{
	"strtol": {
		"params": {},
		"signatures": [
			[]
		],
		"doc": [
			"These commands are used to convert strings to numbers. atoi() will\n",
			"interpret given string as a decimal number (base 10), while axtoi()\n",
			"interprets strings as hexadecimal numbers (base 16). strtol() lets\n",
			"the user specify a base (valid range is between 2 and 36 inclusive,\n",
			"or the special value0, which means auto-detection).\n",
			"\n",
			"The atoi() and strtol() functions conform to the C functions with the same\n",
			"names, and axtoi() is the same as strtol(), with a base of 16. Results are\n",
			"clamped to signed 32 bit int range (INT_MIN ~ INT_MAX)\n",
			"\n",
			"Example:\n",
			"\n",
			".@var = atoi(\"11\");        // Sets .@var to 11\n",
			".@var = axtoi(\"FF\");       // Sets .@var to 255\n",
			"mes(axtoi(\"11\"));          // Displays 17 (1 = 1, 10 = 16)\n",
			".@var = strtol(\"11\", 10);  // Sets .@var to 11 (11 base 10)\n",
			".@var = strtol(\"11\", 16);  // Sets .@var to 17 (11 base 16)\n",
			".@var = strtol(\"11\", 0);   // Sets .@var to 11 (11 base 10, auto-detected)\n",
			".@var = strtol(\"0x11\", 0); // Sets .@var to 17 (11 base 16, auto-detected because of the \"0x\" prefix)\n",
			".@var = strtol(\"011\", 0);  // Sets .@var to 9 (11 base 8, auto-detected because of the \"0\" prefix)\n",
			".@var = strtol(\"11\", 2);   // Sets .@var to 3 (binary 11)\n"
		],
		"return": "unknown",
		"deprecated": false
	}
}