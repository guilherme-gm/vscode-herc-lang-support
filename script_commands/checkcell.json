{
	"checkcell": {
		"params": {
			"map name": {
				"type": "string",
				"default": "*?*",
				"doc": []
			},
			"x": {
				"type": "number",
				"default": "*?*",
				"doc": []
			},
			"y": {
				"type": "number",
				"default": "*?*",
				"doc": []
			},
			"type": {
				"type": "number",
				"default": "*?*",
				"doc": []
			}
		},
		"signatures": [
			[
				"map name",
				"x",
				"y",
				"type"
			]
		],
		"doc": [
			"This command will return true or false, depending on whether the specified cell\n",
			"has the 'type' flag set or not. There are various types to check, all\n",
			"mimicking the server's cell_chk enumeration. The types can be found in\n",
			"'doc/constants.md' under 'Cell checks'.\n",
			"\n",
			"The meaning of the individual types can be confusing, so here's an\n",
			"overview:\n",
			"  - cell_chkwall/water/cliff\n",
			"    these check directly for the 'terrain component' of the specified cell\n",
			"  - cell_chkpass/reach/nopass/noreach\n",
			"    passable = not wall & not cliff, reachable = passable\n",
			"    wrt. no-stacking mod\n",
			"  - cell_chknpc/basilica/landprotector/novending/nochat\n",
			"    these check for specific dynamic flags (name indicates what they do)\n",
			"\n",
			"Example:\n",
			"\n",
			"\tmes(\"Pick a destination map.\");\n",
			"\tinput(.@map$);\n",
			"\tmes(\"Alright, now give me the coordinates.\");\n",
			"\tinput(.@x);\n",
			"\tinput(.@y);\n",
			"\tif (!checkcell(.@map$, .@x, .@y, cell_chkpass)) {\n",
			"\t\tmes(\"Can't warp you there, sorry!\");\n",
			"\t\tclose();\n",
			"\t} else {\n",
			"\t\tmes(\"Ok, get ready...\");\n",
			"\t\tclose2();\n",
			"\t\twarp(.@map$, .@x, .@y);\n",
			"\t\tend;\n",
			"\t}\n"
		],
		"return": "unknown",
		"deprecated": false
	}
}